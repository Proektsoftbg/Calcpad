<?xml version="1.0" encoding="utf-8"?>
<root>
	<!-- 
		Microsoft ResX Schema

		Version 1.3

		The primary goals of this format is to allow a simple XML format 
		that is mostly human readable. The generation and parsing of the 
		various data types are done through the TypeConverter classes 
		associated with the data types.

		Example:

		... ado.net/XML headers & schema ...
		<resheader name="resmimetype">text/microsoft-resx</resheader>
		<resheader name="version">1.3</resheader>
		<resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
		<resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
		<data name="Name1">this is my long string</data>
		<data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
		<data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
			[base64 mime encoded serialized .NET Framework object]
		</data>
		<data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
			[base64 mime encoded string representing a byte array form of the .NET Framework object]
		</data>

		There are any number of "resheader" rows that contain simple 
		name/value pairs.

		Each data row contains a name, and value. The row also contains a 
		type or mimetype. Type corresponds to a .NET class that support 
		text/value conversion through the TypeConverter architecture. 
		Classes that don't support this are serialized and stored with the 
		mimetype set.

		The mimetype is used for serialized objects, and tells the 
		ResXResourceReader how to depersist the object. This is currently not 
		extensible. For a given mimetype the value must be set accordingly:

		Note - application/x-microsoft.net.object.binary.base64 is the format 
		that the ResXResourceWriter will generate, however the reader can 
		read any of the formats listed below.

		mimetype: application/x-microsoft.net.object.binary.base64
		value   : The object must be serialized with 
			: System.Serialization.Formatters.Binary.BinaryFormatter
			: and then encoded with base64 encoding.

		mimetype: application/x-microsoft.net.object.soap.base64
		value   : The object must be serialized with 
			: System.Runtime.Serialization.Formatters.Soap.SoapFormatter
			: and then encoded with base64 encoding.

		mimetype: application/x-microsoft.net.object.bytearray.base64
		value   : The object must be serialized into a byte array 
			: using a System.ComponentModel.TypeConverter
			: and then encoded with base64 encoding.
	-->
	
	<xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
		<xsd:element name="root" msdata:IsDataSet="true">
			<xsd:complexType>
				<xsd:choice maxOccurs="unbounded">
					<xsd:element name="data">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
								<xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
							</xsd:sequence>
							<xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
							<xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
							<xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="resheader">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
							</xsd:sequence>
							<xsd:attribute name="name" type="xsd:string" use="required" />
						</xsd:complexType>
					</xsd:element>
				</xsd:choice>
			</xsd:complexType>
		</xsd:element>
	</xsd:schema>
	<resheader name="resmimetype">
		<value>text/microsoft-resx</value>
	</resheader>
	<resheader name="version">
		<value>1.3</value>
	</resheader>
	<resheader name="reader">
		<value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.3500.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
	</resheader>
	<resheader name="writer">
		<value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.3500.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
	</resheader>
  <data name="Integer" xml:space="preserve">
        <value>Integer</value>
    </data>
  <data name="IntegerDivision" xml:space="preserve">
        <value>Integer Division</value>
    </data>
  <data name="InverseCosecant" xml:space="preserve">
        <value>Inverse Cosecant</value>
    </data>
  <data name="InverseCosine" xml:space="preserve">
        <value>Inverse Cosine</value>
    </data>
  <data name="InverseCotangent" xml:space="preserve">
        <value>Inverse Cotangent</value>
    </data>
  <data name="InverseHyperbolic" xml:space="preserve">
    <value>Inverse Hyperbolic</value>
  </data>
  <data name="InverseHyperbolicCosecant" xml:space="preserve">
    <value>Inverse Hyperbolic Cosecant</value>
  </data>
  <data name="InverseHyperbolicCosine" xml:space="preserve">
    <value>Inverse Hyperbolic Cosine</value>
  </data>
  <data name="InverseHyperbolicCotangent" xml:space="preserve">
    <value>Inverse Hyperbolic Cotangent</value>
  </data>
  <data name="InverseHyperbolicSecant" xml:space="preserve">
    <value>Inverse Hyperbolic Secant</value>
  </data>
  <data name="InverseHyperbolicSine" xml:space="preserve">
    <value>Inverse Hyperbolic Sine</value>
  </data>
  <data name="InverseHyperbolicTangent" xml:space="preserve">
    <value>Inverse Hyperbolic Tangent</value>
  </data>
  <data name="InverseSecant" xml:space="preserve">
        <value>Inverse Secant</value>
    </data>
  <data name="InverseSine" xml:space="preserve">
        <value>Inverse Sine</value>
    </data>
  <data name="InverseTangent" xml:space="preserve">
        <value>Inverse Tangent</value>
    </data>
  <data name="InverseTrigonometric" xml:space="preserve">
        <value>Inverse Trigonometric</value>
    </data>
  <data name="LeastCommonMultiple" xml:space="preserve">
    <value>The least common multiple of several integers</value>
  </data>
  <data name="LessThan" xml:space="preserve">
        <value>Less Than</value>
    </data>
  <data name="LessThanOrEqual" xml:space="preserve">
        <value>Less Than or Equal</value>
    </data>
  <data name="LinearInterpolation" xml:space="preserve">
        <value>Linear interpolation</value>
    </data>
  <data name="LogarithmicExponentialAndRoots" xml:space="preserve">
        <value>Logarithmic, Exponential and Roots</value>
    </data>
  <data name="LogicalAnd" xml:space="preserve">
    <value>Logical "AND"</value>
  </data>
  <data name="LogicalNot" xml:space="preserve">
    <value>Logical "NOT"</value>
  </data>
  <data name="LogicalOr" xml:space="preserve">
    <value>Logical "OR"</value>
  </data>
  <data name="LogicalXor" xml:space="preserve">
    <value>Logical "XOR"</value>
  </data>
  <data name="MinimumOfMultipleValues" xml:space="preserve">
        <value>Minimum of multiple values</value>
    </data>
  <data name="Modulo" xml:space="preserve">
        <value>Modulo (reminder)</value>
    </data>
  <data name="Modulo_Description" xml:space="preserve">
        <value>The modulo (reminder) of an integer division</value>
    </data>
  <data name="Multiplication" xml:space="preserve">
        <value>Multiplication</value>
    </data>
  <data name="NaturalExponent" xml:space="preserve">
        <value>Natural Exponent</value>
    </data>
  <data name="NaturalLogarithm" xml:space="preserve">
        <value>Natural Logarithm</value>
    </data>
  <data name="NotEqualTo" xml:space="preserve">
        <value>Not Equal To</value>
    </data>
  <data name="NthRoot" xml:space="preserve">
        <value>n-th Root</value>
    </data>
  <data name="Operators" xml:space="preserve">
        <value>Operators</value>
    </data>
  <data name="PiNumber" xml:space="preserve">
        <value>Pi number</value>
    </data>
  <data name="ProductOfMultipleValues" xml:space="preserve">
        <value>Product of multiple values</value>
    </data>
  <data name="RandomNumber" xml:space="preserve">
        <value>Random number between 0 and x</value>
    </data>
  <data name="RealPartOfAComplexNumber" xml:space="preserve">
        <value>The real part of a complex number</value>
    </data>
  <data name="Rounding" xml:space="preserve">
        <value>Rounding</value>
    </data>
  <data name="RoundToNearestInteger" xml:space="preserve">
        <value>Round to the nearest integer</value>
    </data>
  <data name="RoundToTheLowerInteger" xml:space="preserve">
        <value>Round to the lower integer</value>
    </data>
  <data name="RoundTowardsZero" xml:space="preserve">
        <value>Round towards zero</value>
    </data>
  <data name="RoundToTheGreaterInteger" xml:space="preserve">
    <value>Round to the greater integer</value>
  </data>
  <data name="Secant" xml:space="preserve">
        <value>Secant</value>
    </data>
  <data name="SelectiveEvaluation_Function" xml:space="preserve">
        <value>Selective evaluation</value>
    </data>
  <data name="SignOfANumber" xml:space="preserve">
        <value>Sign of a number</value>
    </data>
  <data name="Sine" xml:space="preserve">
        <value>Sine</value>
    </data>
  <data name="SquareRoot" xml:space="preserve">
        <value>Square Root</value>
    </data>
  <data name="SquareRootOfSumOfSquares" xml:space="preserve">
        <value>Square root of sum of squares</value>
    </data>
  <data name="Subtraction" xml:space="preserve">
        <value>Subtraction</value>
    </data>
  <data name="SumOfMultipleValues" xml:space="preserve">
        <value>Sum of multiple values</value>
    </data>
  <data name="SumOfSquares" xml:space="preserve">
        <value>Sum of squares</value>
    </data>
  <data name="TakeTheNthElement" xml:space="preserve">
        <value>Take the n-th element</value>
    </data>
  <data name="Tangent" xml:space="preserve">
        <value>Tangent</value>
    </data>
  <data name="Trigonometric" xml:space="preserve">
        <value>Trigonometric</value>
    </data>
  <data name="PhaseOfAComplexNumber" xml:space="preserve">
        <value>The phase of a complex number</value>
    </data>
  <data name="Cotangent" xml:space="preserve">
    <value>Cotangent</value>
  </data>
  <data name="DecimalLogarithm" xml:space="preserve">
    <value>Decimal logarithm</value>
  </data>
  <data name="RaiseToSquare" xml:space="preserve">
    <value>Raise to square</value>
  </data>
  <data name="RaiseToCube" xml:space="preserve">
    <value>Raise to cube</value>
  </data>
  <data name="RaiseToPower" xml:space="preserve">
    <value>Raise to power</value>
  </data>
  <data name="CubicRoot" xml:space="preserve">
    <value>Cubic root</value>
  </data>
  <data name="DecimalPoint" xml:space="preserve">
    <value>Decimal point</value>
  </data>
  <data name="Assignment" xml:space="preserve">
    <value>Assignment</value>
  </data>
  <data name="Multiply" xml:space="preserve">
    <value>Multiply</value>
  </data>
  <data name="Divide" xml:space="preserve">
    <value>Divide</value>
  </data>
  <data name="Add" xml:space="preserve">
    <value>Add</value>
  </data>
  <data name="Subtract" xml:space="preserve">
    <value>Subtract</value>
  </data>
  <data name="Factorial" xml:space="preserve">
    <value>Factorial</value>
  </data>
  <data name="Exponentiation" xml:space="preserve">
    <value>Exponentiation</value>
  </data>
  <data name="Division" xml:space="preserve">
    <value>Division</value>
  </data>
  <data name="DivisionBar" xml:space="preserve">
    <value>Division Bar</value>
  </data>
  <data name="Addition" xml:space="preserve">
    <value>Addition</value>
  </data>
  <data name="EqualTo" xml:space="preserve">
    <value>Equal To</value>
  </data>
  <data name="Equal" xml:space="preserve">
    <value>Equal</value>
  </data>
  <data name="NotEqual" xml:space="preserve">
    <value>Not еqual</value>
  </data>
  <data name="GreaterThan" xml:space="preserve">
    <value>Greater Than</value>
  </data>
  <data name="GreaterThanOrEqual" xml:space="preserve">
    <value>Greater Than Or Equal</value>
  </data>
  <data name="Functions" xml:space="preserve">
    <value>Functions</value>
  </data>
  <data name="Cosine" xml:space="preserve">
    <value>Cosine</value>
  </data>
  <data name="Cosecant" xml:space="preserve">
    <value>Cosecant</value>
  </data>
  <data name="HyperbolicSine" xml:space="preserve">
    <value>Hyperbolic Sine</value>
  </data>
  <data name="HyperbolicCosine" xml:space="preserve">
    <value>Hyperbolic Cosine</value>
  </data>
  <data name="HyperbolicTangent" xml:space="preserve">
    <value>Hyperbolic Tangent</value>
  </data>
  <data name="Hyperbolic" xml:space="preserve">
    <value>Hyperbolic</value>
  </data>
  <data name="HyperbolicCosecant" xml:space="preserve">
    <value>Hyperbolic Cosecant</value>
  </data>
  <data name="HyperbolicSecant" xml:space="preserve">
    <value>HyperbolicSecant</value>
  </data>
  <data name="HyperbolicCotangent" xml:space="preserve">
    <value>Hyperbolic Cotangent</value>
  </data>
  <data name="AngleWhichTangentIsYDividedByX" xml:space="preserve">
    <value>The angle which tangent is y/x</value>
  </data>
  <data name="BinaryLogarithm" xml:space="preserve">
    <value>Binary Logarithm</value>
  </data>
  <data name="GreatestCommonDivisor" xml:space="preserve">
    <value>The greatest common divisor of several integers</value>
  </data>
  <data name="Complex" xml:space="preserve">
    <value>Complex</value>
  </data>
  <data name="ImaginaryPartOfAComplexNumber" xml:space="preserve">
    <value>The imaginary part of a complex numbers</value>
  </data>
  <data name="AggregateAndInterpolation" xml:space="preserve">
    <value>Aggregate and Interpolation</value>
  </data>
  <data name="AbsoluteValue" xml:space="preserve">
    <value>Absolute value/magnitude</value>
  </data>
  <data name="MaximumOfMultipleValues" xml:space="preserve">
    <value>Maximum of multiple values</value>
  </data>
  <data name="AverageOfMultipleValues" xml:space="preserve">
    <value>Average of multiple values</value>
  </data>
  <data name="GeometricMean" xml:space="preserve">
    <value>Geometric mean</value>
  </data>
  <data name="HermiteSplineInterpolation" xml:space="preserve">
    <value>Hermite spline interpolation</value>
  </data>
  <data name="ConditionalAndLogical" xml:space="preserve">
    <value>Conditional And Logical</value>
  </data>
  <data name="ConditionalEvaluation_Function" xml:space="preserve">
    <value>Conditional еvaluation</value>
  </data>
  <data name="LeftBracket" xml:space="preserve">
    <value>Left bracket</value>
  </data>
  <data name="RightBracket" xml:space="preserve">
    <value>Right bracket</value>
  </data>
</root>