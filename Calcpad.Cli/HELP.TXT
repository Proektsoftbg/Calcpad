————————————————————————————————————————————————————————————————————————————————
 Commands:
————————————————————————————————————————————————————————————————————————————————
	NEW     - clear the current session and start a new one;
	OPEN    - open a stored problem from the disk;
	SAVE    - save the current problem to the disk;
	LIST    - list the available problems on the disk;
	EXIT    - close the program;
	RESET   - clear the output and re-calculate everything from the start;
	CLS     - clear the output and continue from the last line;
	DEL     - delete the last line;
	DEG     - set default trigonometric units to degrees;
	RAD     - set default trigonometric units to radians;
	GRA     - set default trigonometric units to grades;
	SETTINGS/OPTIONS - display the settings file for editing; 
	LICENSE - display the license file;
	HELP    - show this help file.

————————————————————————————————————————————————————————————————————————————————
 Operators: ! ^ / ÷ \ % * - + ≡ ≠ < > ≤ ≥ ∧ ∨ ⊕ = ? (input field)
————————————————————————————————————————————————————————————————————————————————
 Custom functions: f(x; y; z…) = expression
————————————————————————————————————————————————————————————————————————————————
 Functions:
————————————————————————————————————————————————————————————————————————————————
    sin(x)     cos(x)     tan(x)      csc(x)      sec(x)         cot(x)
    asin(x)    acos(x)    atan(x)     acsc(x)     asec(x)        acot(x)
    sinh(x)    cosh(x)    tanh(x)     csch(x)     sech(x)        coth(x)
    asinh(x)   acosh(x)   atanh(x)    acsch(x)    asech(x)       acoth(x)
    log(x)     ln(x)      log_2(x)    exp(x)   
    sqr(x)     sqrt(x)    cbrt(x)     root(x; n)
    round(x)   floor(x)   ceiling(x)  trunc(x)
    sign(x)    mod(x; y)  gcd(x; y)   lcm(x; y)   atan2(x; y)
    abs(x)     re(x)      im(x)       phase(x)    random(x)
    and(x; y; z…)         or(x; y; z…)            xor(x; y; z…)  not(x)        
    min(x; y; z…)         max(x; y; z…)
    sum(x; y; z…)         average(x; y; z…)       sumsq(x; y; z…)
    product(x; y; z…)     mean(x; y; z…)          srss(x; y; z…)
    if(cond; val-if-true; val-if-false)
    switch(cond1; val1; cond2; val2; …; default)
    take(n; a; b; c…)     line(x; a; b; c…)       spline(x; a; b; c…)
	
————————————————————————————————————————————————————————————————————————————————
 Iterative and numerical methods:
————————————————————————————————————————————————————————————————————————————————
    $Root{f(x) = const @ x = a : b}
    $Root{f(x) @ x = a : b}
    $Find{f(x) @ x = a : b}
    $Sup{f(x) @ x = a : b}
    $Inf{f(x) @ x = a : b}
    $Area{f(x) @ x = a : b}
    $Integral{f(x) @ x = a : b}
    $Slope{f(x) @ x = a}
    $Sum{f(k) @ k = a : b}
    $Product{f(k) @ k = a : b}
    $Repeat{f(k) @ k = a : b}
    Precision
	
————————————————————————————————————————————————————————————————————————————————
 Units of measurement:
————————————————————————————————————————————————————————————————————————————————
    Dimensionless:           % ‰
    Angles:                  ° ′ ″ deg rad grad rev
	
    Metric (SI and compatible):
        Mass:                g hg kg t kt Mt Gt dg cg mg μg Da u
        Length:              m km dm cm mm μm nm pm AU ly
        Time:                s ms μs ns ps min h d w y
        Frequency:           Hz kHz MHz GHz THz mHz μHz nHz pHz rpm
        Speed:               kmh
        Electric current:    A kA MA GA TA mA μA nA pA
        Temperature:         °C Δ°C K
        Amount of substance: mol
        Luminous intensity:  cd
        Area:                a daa ha
        Volume:              L daL hL dL cL mL μL nL pL
        Force:               N daN hN kN MN GN TN gf kgf tf dyn
        Moment:              Nm kNm
        Pressure:            Pa daPa hPa kPa MPa GPa TPa dPa cPa mPa μPa nPa pPa
                             bar mbar μbar atm at Torr mmHg
        Viscosity:           P cP St cSt
        Energy work:         J   kJ   MJ   GJ   TJ   mJ   μJ   nJ   pJ
                             Wh  kWh  MWh  GWh  TWh  mWh  μWh  nWh  pWh
                             eV  keV  MeV  GeV  TeV  PeV  EeV  cal  kcal erg 
        Power:               W   kW   MW   GW   TW   mW   μW   nW   pW   hpM  ks
                             VA  kVA  MVA  GVA  TVA  mVA  μVA  nVA  pVA
                             VAR kVAR MVAR GVAR TVAR mVAR μVAR nVAR pVAR
        Electric charge:     C   kC   MC   GC   TC   mC   μC   nC   pC   Ah   mAh
        Potential:           V   kV   MV   GV   TV   mV   μV   nV   pV
        Capacitance:         F   kF   MF   GF   TF   mF   μF   nF   pF
        Resistance:          Ω   kΩ   MΩ   GΩ   TΩ   mΩ   μΩ   nΩ   pΩ
        Conductance:         S   kS   MS   GS   TS   mS   μS   nS   pS 
                             ℧   k℧   M℧   G℧   T℧   m℧   μ℧   n℧   p℧
        Magnetic flux:       Wb  kWb  MWb  GWb  TWb  mWb  μWb  nWb  pWb
        Magn. flux density:  T   kT   MT   GT   TT   mT   μT   nT   pT
        Inductance:          H   kH   MH   GH   TH   mH   μH   nH   pH
        Luminous flux:       lm
        Illuminance:         lx
        Radioactivity:       Bq  kBq  MBq  GBq  TBq  mBq  μBq  nBq  pBq  Ci Rd
        Absorbed dose:       Gy  kGy  MGy  GGy  TGy  mGy  μGy  nGy  pGy
        Equivalent dose:     Sv  kSv  MSv  GSv  TSv  mSv  μSv  nSv  pSv
        Catalytic activity:  kat
		
    Non-metric (Imperial/US):
        Mass:          gr dr oz lb (lbm, lb_m) kipm (kip_m) st qr 
                       cwt (cwt_UK, cwt_US) ton (ton_UK, ton_US) slug
        Length:        th in ft yd ch fur mi ftm (ftm_UK, ftm_US)
                       cable (cable_UK, cable_US) nmi li rod pole perch lea
        Speed:         mph knot
        Temperature:   °F Δ°F °R
        Area:          rood ac
        Volume, fluid: fl_oz     gi      pt     qt     gal     bbl   
                       fl_oz_UK  gi_UK   pt_UK  qt_UK  gal_UK  bbl_UK
                       fl_oz_US  gi_US   pt_US  qt_US  gal_US  bbl_US
        Volume, dry:                     pt_dry qt_dry gal_dry bbl_dry
                       pk (pk_UK, pk_US) bu (bu_UK, bu_US)
        Force:         ozf (oz_f) lbf (lb_f) kip (kipf, kip_f) tonf (ton_f) pdl
        Pressure:      osi osf psi psf ksi ksf tsi tsf inHg
        Energy/work:   BTU therm (therm_UK, therm_US) quad
        Power:         hp hpE hpS

————————————————————————————————————————————————————————————————————————————————
 Special symbol conversion table:
————————————————————————————————————————————————————————————————————————————————
(add apostrophe ` before the respective latin letter)

Fr: `a `b `c `d `e `f `g `h `i `j `k `l `m `n `o `p `q `r `s `t `u `v `w `x `y `z 
To:  α  β  χ  δ  ε  φ  γ  η  ι  ø  κ  λ  μ  ν  ο  π  θ  ρ  σ  τ  υ  ϑ  ω  ξ  ψ  ζ

Fr: `A `B `C `D `E `F `G `H `I `J `K `L `M `N `O `P `Q `R `S `T `U `V `W `X `Y `Z 
To:  Α  Β  Χ  Δ  Ε  Φ  Γ  Η  Ι  Ø  Κ  Λ  Μ  Ν  Ο  Π  Θ  Ρ  Σ  Τ  Υ  ∡  Ω  Ξ  Ψ  Ζ

Fr: `@ `' (single quote) `" (double quote)
To:  °  ′ (single prime)  ″ (double prime/second)

————————————————————————————————————————————————————————————————————————————————
 Command line options (support the same language features as Calcpad.exe):
———————————————————————————————————————————————————————————————————————————————— 
    cli input.cpd output.html - calculates input.cpd and exports 
    cli input.cpd output.docx   the results to the respective format
    cli input.cpd output.pdf    (html, docx or pdf);
		
    cli input.cpd html - calculates input.cpd and exports to input.html;
    cli input.cpd docx - calculates input.cpd and exports to input.docx;	
    cli input.cpd pdf  - calculates input.cpd and exports to input.pdf;
	
    cli input.cpd      - calculates input.cpd and exports to input.html.
	
	Additional arguments:
		-s   		   - silent mode (do not open the output file), e.g.:
		cli input.cpd output.html -s