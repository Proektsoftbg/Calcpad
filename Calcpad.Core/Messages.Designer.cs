//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Calcpad.Core {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Messages {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Messages() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Calcpad.Core.Messages", typeof(Messages).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Argument out of range for {0}(x)..
        /// </summary>
        public static string Argument_out_of_range_for__0__x_ {
            get {
                return ResourceManager.GetString("Argument_out_of_range_for__0__x_", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Argument out of range for n!..
        /// </summary>
        public static string Argument_out_of_range_for_n_factorial {
            get {
                return ResourceManager.GetString("Argument_out_of_range_for_n_factorial", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Assignment &apos;=&apos; must be the first operator in the expression..
        /// </summary>
        public static string Assignment_equals_must_be_the_first_operator_in_the_expression {
            get {
                return ResourceManager.GetString("Assignment_equals_must_be_the_first_operator_in_the_expression", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Both values must be integers..
        /// </summary>
        public static string Both_values_must_be_integers {
            get {
                return ResourceManager.GetString("Both_values_must_be_integers", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Calculations not active..
        /// </summary>
        public static string Calculations_not_active {
            get {
                return ResourceManager.GetString("Calculations_not_active", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot evaluate &quot;{0}&quot; as {1}..
        /// </summary>
        public static string Cannot_evaluate__0__as__1__ {
            get {
                return ResourceManager.GetString("Cannot_evaluate__0__as__1__", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot evaluate reminder: &quot;{0}  %  {1}&quot;. Denominator must be unitless..
        /// </summary>
        public static string Cannot_evaluate_reminder__0__1__Denominator_must_be_unitless {
            get {
                return ResourceManager.GetString("Cannot_evaluate_reminder__0__1__Denominator_must_be_unitless", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot evaluate reminder: &quot;{0}  %  {1}&quot;. The denominator must be unitless..
        /// </summary>
        public static string Cannot_evaluate_reminder__0__1__The_denominator_must_be_unitless_ {
            get {
                return ResourceManager.GetString("Cannot_evaluate_reminder__0__1__The_denominator_must_be_unitless_", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot evaluate the function %F for %V = {0}..
        /// </summary>
        public static string Cannot_evaluate_the_function_f_for_v_equals__0__ {
            get {
                return ResourceManager.GetString("Cannot_evaluate_the_function_f_for_v_equals__0__", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot rewrite existing units: {0}..
        /// </summary>
        public static string Cannot_rewrite_existing_units__0__ {
            get {
                return ResourceManager.GetString("Cannot_rewrite_existing_units__0__", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Circular reference detected for function &quot;{0}&quot;..
        /// </summary>
        public static string Circular_reference_detected_for_function__0__ {
            get {
                return ResourceManager.GetString("Circular_reference_detected_for_function__0__", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Condition block not initialized with &quot;#if&quot;..
        /// </summary>
        public static string Condition_block_not_initialized_with_if_ {
            get {
                return ResourceManager.GetString("Condition_block_not_initialized_with_if_", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Condition cannot be empty..
        /// </summary>
        public static string Condition_cannot_be_empty {
            get {
                return ResourceManager.GetString("Condition_cannot_be_empty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Condition cannot evaluate to a complex number..
        /// </summary>
        public static string Condition_cannot_evaluate_to_a_complex_number {
            get {
                return ResourceManager.GetString("Condition_cannot_evaluate_to_a_complex_number", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Condition result is invalid: {0}..
        /// </summary>
        public static string Condition_result_is_invalid_0_ {
            get {
                return ResourceManager.GetString("Condition_result_is_invalid_0_", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &quot;#continue&quot; without a corresponding &quot;#repeat&quot;..
        /// </summary>
        public static string continue_without_a_corresponding_repeat {
            get {
                return ResourceManager.GetString("continue_without_a_corresponding_repeat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Duplicate &quot;#else&quot; in condition block..
        /// </summary>
        public static string Duplicate_else_in_condition_block {
            get {
                return ResourceManager.GetString("Duplicate_else_in_condition_block", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Duplicate macro name: &quot;{0}&quot;..
        /// </summary>
        public static string Duplicate_macro_name_0_ {
            get {
                return ResourceManager.GetString("Duplicate_macro_name_0_", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Duplicate macro parameter names: {0} and {1}..
        /// </summary>
        public static string Duplicate_macro_parameter_names__0__and__1__ {
            get {
                return ResourceManager.GetString("Duplicate_macro_parameter_names__0__and__1__", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &quot;#else if&quot; is not allowed after &quot;#else&quot; in condition block..
        /// </summary>
        public static string else_if_is_not_allowed_after_else_in_condition_block {
            get {
                return ResourceManager.GetString("else_if_is_not_allowed_after_else_in_condition_block", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Entangled &quot;#if - #end if&quot; and &quot;#repeat - #loop&quot; blocks..
        /// </summary>
        public static string Entangled_if__end_if__and_repeat__loop_blocks {
            get {
                return ResourceManager.GetString("Entangled_if__end_if__and_repeat__loop_blocks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error converting png to Base64..
        /// </summary>
        public static string Error_converting_png_to_Base64 {
            get {
                return ResourceManager.GetString("Error_converting_png_to_Base64", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error evaluating &quot;{0}&quot; as function..
        /// </summary>
        public static string Error_evaluating__0__as_function {
            get {
                return ResourceManager.GetString("Error_evaluating__0__as_function", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error evaluating &quot;{0}&quot; as function or operator..
        /// </summary>
        public static string Error_evaluating__0__as_function_or_operator {
            get {
                return ResourceManager.GetString("Error_evaluating__0__as_function_or_operator", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;div class=&quot;errorHeader&quot;&gt;Found &lt;b&gt;1&lt;/b&gt; error on line:.
        /// </summary>
        public static string Error_found_on_line {
            get {
                return ResourceManager.GetString("Error_found_on_line", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error in &quot;{0}&quot; on line {1}: {2}.
        /// </summary>
        public static string Error_in_0_on_line_1__2 {
            get {
                return ResourceManager.GetString("Error_in_0_on_line_1__2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error parsing &quot;{0}&quot; as number..
        /// </summary>
        public static string Error_parsing__0__as_number {
            get {
                return ResourceManager.GetString("Error_parsing__0__as_number", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error parsing &quot;{0}&quot; as units..
        /// </summary>
        public static string Error_parsing__0__as_units {
            get {
                return ResourceManager.GetString("Error_parsing__0__as_units", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error writing a png file to &quot;{0}&quot;..
        /// </summary>
        public static string Error_writing_a_png_file_to__0__ {
            get {
                return ResourceManager.GetString("Error_writing_a_png_file_to__0__", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error writing a svg file to &quot;{0}&quot;..
        /// </summary>
        public static string Error_writing_a_svg_file_to__0__ {
            get {
                return ResourceManager.GetString("Error_writing_a_svg_file_to__0__", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;div class=&quot;errorHeader&quot;&gt;Found &lt;b&gt;{0}&lt;/b&gt; errors on lines:.
        /// </summary>
        public static string Errors_found_on_lines {
            get {
                return ResourceManager.GetString("Errors_found_on_lines", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expression is empty..
        /// </summary>
        public static string Expression_is_empty {
            get {
                return ResourceManager.GetString("Expression_is_empty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to File not found..
        /// </summary>
        public static string File_not_found {
            get {
                return ResourceManager.GetString("File_not_found", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  Warning! Function redefined..
        /// </summary>
        public static string Function_redefined {
            get {
                return ResourceManager.GetString("Function_redefined", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error: &quot;#if&quot; block not closed. Missing &quot;#end if&quot;..
        /// </summary>
        public static string if_block_not_closed_Missing_end_if {
            get {
                return ResourceManager.GetString("if_block_not_closed_Missing_end_if", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Improper use of the assignment operator &apos;=&apos;..
        /// </summary>
        public static string Improper_use_of_the_assignment_operator_equals {
            get {
                return ResourceManager.GetString("Improper_use_of_the_assignment_operator_equals", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Incomplete expression..
        /// </summary>
        public static string Incomplete_expression {
            get {
                return ResourceManager.GetString("Incomplete_expression", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Inconsistent units: &quot;{0} {1} {2}&quot;..
        /// </summary>
        public static string Inconsistent_units__0__1__2__ {
            get {
                return ResourceManager.GetString("Inconsistent_units__0__1__2__", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Inconsistent units: &quot;{0}&quot; and &quot;{1}&quot;..
        /// </summary>
        public static string Inconsistent_units__0__and__1__ {
            get {
                return ResourceManager.GetString("Inconsistent_units__0__and__1__", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Inconsistent units for &quot;{0} = {1}&quot;..
        /// </summary>
        public static string Inconsistent_units_for__0__equals__1__ {
            get {
                return ResourceManager.GetString("Inconsistent_units_for__0__equals__1__", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Inconsistent units for &quot;{0} = {1} : {2}&quot;..
        /// </summary>
        public static string Inconsistent_units_for__0__equals__1_____2__ {
            get {
                return ResourceManager.GetString("Inconsistent_units_for__0__equals__1__:__2__", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Interrupted by user..
        /// </summary>
        public static string Interrupted_by_user {
            get {
                return ResourceManager.GetString("Interrupted_by_user", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid function: &quot;{0}&quot;..
        /// </summary>
        public static string Invalid_function__0__ {
            get {
                return ResourceManager.GetString("Invalid_function__0__", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid inside macro definition..
        /// </summary>
        public static string Invalid_inside_macro_definition {
            get {
                return ResourceManager.GetString("Invalid_inside_macro_definition", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid macro identifier: &quot;{0}$&quot;..
        /// </summary>
        public static string Invalid_macro_identifier__0__ {
            get {
                return ResourceManager.GetString("Invalid_macro_identifier__0__", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid macro name: &quot;{0}&quot;..
        /// </summary>
        public static string Invalid_macro_name_0 {
            get {
                return ResourceManager.GetString("Invalid_macro_name_0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid number of arguments..
        /// </summary>
        public static string Invalid_number_of_arguments {
            get {
                return ResourceManager.GetString("Invalid_number_of_arguments", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid operator: &quot;{0}&quot;..
        /// </summary>
        public static string Invalid_operator__0__ {
            get {
                return ResourceManager.GetString("Invalid_operator__0__", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid solver command definition &quot;{0}&quot;..
        /// </summary>
        public static string Invalid_solver_command_definition__0__ {
            get {
                return ResourceManager.GetString("Invalid_solver_command_definition__0__", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid symbol: &quot;{0}&quot;..
        /// </summary>
        public static string Invalid_symbol__0__ {
            get {
                return ResourceManager.GetString("Invalid_symbol__0__", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid symbol &quot;{0}&quot; in macro name..
        /// </summary>
        public static string Invalid_symbol_0_in_macro_name {
            get {
                return ResourceManager.GetString("Invalid_symbol_0_in_macro_name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid syntax: &quot;{0}&quot;..
        /// </summary>
        public static string Invalid_syntax__0__ {
            get {
                return ResourceManager.GetString("Invalid_syntax__0__", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid syntax: &quot;{0} {1}&quot;..
        /// </summary>
        public static string Invalid_syntax__0__1__ {
            get {
                return ResourceManager.GetString("Invalid_syntax__0__1__", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid token in function definition: &quot;{0}&quot;..
        /// </summary>
        public static string Invalid_token_in_function_definition__0__ {
            get {
                return ResourceManager.GetString("Invalid_token_in_function_definition__0__", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid units: &quot;{0}&quot;..
        /// </summary>
        public static string Invalid_units__0__ {
            get {
                return ResourceManager.GetString("Invalid_units__0__", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid units for function: &quot;{0}({1})&quot;..
        /// </summary>
        public static string Invalid_units_for_function__0__1__ {
            get {
                return ResourceManager.GetString("Invalid_units_for_function__0__1__", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid character: &apos;{0}&apos;. Variables, functions and units must begin with a letter or ∡, except for the following units: ° ′ ″ % ‰..
        /// </summary>
        public static string InvalidCharacterException {
            get {
                return ResourceManager.GetString("InvalidCharacterException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid function definition. It has to match the pattern: &quot;f(x; y; z...) =&quot;..
        /// </summary>
        public static string InvalidFunctionDefinitionException {
            get {
                return ResourceManager.GetString("InvalidFunctionDefinitionException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Limits out of range: [{0}; {1}]..
        /// </summary>
        public static string Limits_out_of_range__0____1__ {
            get {
                return ResourceManager.GetString("Limits_out_of_range__0____1__", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &quot;#loop&quot; without a corresponding &quot;#repeat&quot;..
        /// </summary>
        public static string loop_without_a_corresponding_repeat {
            get {
                return ResourceManager.GetString("loop_without_a_corresponding_repeat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to #Error: Macro definition block not closed. Missing &quot;#end def&quot;..
        /// </summary>
        public static string Macro_definition_block_not_closed_Missing_end_def {
            get {
                return ResourceManager.GetString("Macro_definition_block_not_closed_Missing_end_def", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Macro not defined: {0}..
        /// </summary>
        public static string Macro_not_defined__0__ {
            get {
                return ResourceManager.GetString("Macro_not_defined__0__", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Missing {0} in surface map command..
        /// </summary>
        public static string Missing__0__in_surface_map_command {
            get {
                return ResourceManager.GetString("Missing__0__in_surface_map_command", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;span class = &quot;err&quot;&gt;Missing {0} in plot command &quot;{1}&quot;.&lt;/span&gt;..
        /// </summary>
        public static string Missing_0_in_plot_command_1 {
            get {
                return ResourceManager.GetString("Missing_0_in_plot_command_1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Missing delimiter &quot;{0}&quot; in solver command {{1}}..
        /// </summary>
        public static string Missing_delimiter__0__in_solver_command__1__ {
            get {
                return ResourceManager.GetString("Missing_delimiter__0__in_solver_command__1__", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;span class = &quot;err&quot;&gt;Missing delimiter &quot;{0}&quot; in plot command &quot;{1}&quot;.&lt;/span&gt;.
        /// </summary>
        public static string Missing_delimiter_0_in_plot_command {
            get {
                return ResourceManager.GetString("Missing_delimiter_0_in_plot_command", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;span class = &quot;err&quot;&gt;Missing delimiter &quot;{0}&quot; in surface map command &quot;{1}&quot;.&lt;/span&gt;.
        /// </summary>
        public static string Missing_delimiter_0_in_surface_map_command_1 {
            get {
                return ResourceManager.GetString("Missing_delimiter_0_in_surface_map_command_1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Missing delimiter in function definition..
        /// </summary>
        public static string Missing_delimiter_in_function_definition {
            get {
                return ResourceManager.GetString("Missing_delimiter_in_function_definition", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Missing left bracket &quot;(&quot;..
        /// </summary>
        public static string Missing_left_bracket {
            get {
                return ResourceManager.GetString("Missing_left_bracket", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Missing left bracket &apos;{&apos; in solver command..
        /// </summary>
        public static string Missing_left_bracket___in_solver_command {
            get {
                return ResourceManager.GetString("Missing_left_bracket_{_in_solver_command", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Missing operand..
        /// </summary>
        public static string Missing_operand {
            get {
                return ResourceManager.GetString("Missing_operand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Missing parameter in function definition..
        /// </summary>
        public static string Missing_parameter_in_function_definition {
            get {
                return ResourceManager.GetString("Missing_parameter_in_function_definition", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Missing right bracket &quot;)&quot;..
        /// </summary>
        public static string Missing_right_bracket {
            get {
                return ResourceManager.GetString("Missing_right_bracket", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Missing right bracket &apos;}&apos; in solver command..
        /// </summary>
        public static string Missing_right_bracket___in_solver_command {
            get {
                return ResourceManager.GetString("Missing_right_bracket_}_in_solver_command", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Missing source file for include..
        /// </summary>
        public static string Missing_source_file_for_include {
            get {
                return ResourceManager.GetString("Missing_source_file_for_include", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;span class = &quot;err&quot;&gt;More than one delimiter &quot;|&quot; in plot command {0}.&lt;/span&gt;.
        /// </summary>
        public static string More_than_one_delimiter_in_plot_command {
            get {
                return ResourceManager.GetString("More_than_one_delimiter_in_plot_command", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to More than one operators &apos;=&apos; in &apos;{0}&apos;..
        /// </summary>
        public static string More_than_one_operator_equals_in__0__ {
            get {
                return ResourceManager.GetString("More_than_one_operator_equals_in__0__", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No solution for: {0}..
        /// </summary>
        public static string No_solution_for__0__ {
            get {
                return ResourceManager.GetString("No_solution_for__0__", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Number of iterations exceeds the maximum {0}.&lt;/p&gt;.
        /// </summary>
        public static string Number_of_iterations_exceeds_the_maximum_0 {
            get {
                return ResourceManager.GetString("Number_of_iterations_exceeds_the_maximum_0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;p&gt;&lt;span class=&quot;err&quot;&gt;Paused!&lt;/span&gt; Press &lt;b&gt;F5&lt;/b&gt; to &lt;a href=&quot;#0&quot; data-text=&quot;continue&quot;&gt;continue&lt;/a&gt; or &lt;b&gt;Esc&lt;/b&gt; to &lt;a href=&quot;#0&quot; data-text=&quot;cancel&quot;&gt;cancel&lt;/a&gt;.&lt;/p&gt;.
        /// </summary>
        public static string Paused_Press_F5_to_continue {
            get {
                return ResourceManager.GetString("Paused_Press_F5_to_continue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Power must be unitless..
        /// </summary>
        public static string Power_must_be_unitless {
            get {
                return ResourceManager.GetString("Power_must_be_unitless", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Raise to square.
        /// </summary>
        public static string Raise_to_square {
            get {
                return ResourceManager.GetString("Raise_to_square", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Recursion is not allowed in function definition: &quot;{0}&quot;..
        /// </summary>
        public static string Recursion_is_not_allowed_in_function_definition__0__ {
            get {
                return ResourceManager.GetString("Recursion_is_not_allowed_in_function_definition__0__", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error: &quot;#repeat&quot; block not closed. Missing &quot;#loop&quot;..
        /// </summary>
        public static string repeat_block_not_closed_Missing_loop {
            get {
                return ResourceManager.GetString("repeat_block_not_closed_Missing_loop", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Root index cannot be a complex number..
        /// </summary>
        public static string Root_index_cannot_be_a_complex_number {
            get {
                return ResourceManager.GetString("Root_index_cannot_be_a_complex_number", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Root index must be an integer &gt; 1..
        /// </summary>
        public static string Root_index_must_be_integer_more_than_1 {
            get {
                return ResourceManager.GetString("Root_index_must_be_integer_more_than_1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Root index must be unitless..
        /// </summary>
        public static string Root_index_must_be_unitless {
            get {
                return ResourceManager.GetString("Root_index_must_be_unitless", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select _All.
        /// </summary>
        public static string SelectAll {
            get {
                return ResourceManager.GetString("SelectAll", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Stack empty. Invalid expression..
        /// </summary>
        public static string Stack_empty_Invalid_expression {
            get {
                return ResourceManager.GetString("Stack_empty_Invalid_expression", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Stack memory leak. Invalid expression..
        /// </summary>
        public static string Stack_memory_leak__Invalid_expression {
            get {
                return ResourceManager.GetString("Stack_memory_leak__Invalid_expression", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The argument of n! cannot be complex..
        /// </summary>
        public static string The_argument_of_n_factorial_cannot_be_complex {
            get {
                return ResourceManager.GetString("The_argument_of_n_factorial_cannot_be_complex", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The argument of n! must be a positive integer..
        /// </summary>
        public static string The_argument_of_n_factorial_must_be_a_positive_integer {
            get {
                return ResourceManager.GetString("The_argument_of_n_factorial_must_be_a_positive_integer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The argument of n! must be unitless..
        /// </summary>
        public static string The_argument_of_n_factorial_must_be_unitless {
            get {
                return ResourceManager.GetString("The_argument_of_n_factorial_must_be_unitless", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The assignment &apos;=&apos; must be preceded by custom function or variable..
        /// </summary>
        public static string The_assignment_equals_must_be_preceded_by_custom_function_or_variable {
            get {
                return ResourceManager.GetString("The_assignment_equals_must_be_preceded_by_custom_function_or_variable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The calculated units &quot;{0}&quot; are inconsistent with the target units &quot;{1}&quot;..
        /// </summary>
        public static string The_calculated_units__0__are_inconsistent_with_the_target_units__1__ {
            get {
                return ResourceManager.GetString("The_calculated_units__0__are_inconsistent_with_the_target_units__1__", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The expression on the right does not evaluate to units..
        /// </summary>
        public static string The_expression_on_the_right_does_not_evaluate_to_units {
            get {
                return ResourceManager.GetString("The_expression_on_the_right_does_not_evaluate_to_units", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The expression on the right side must be constant: &quot;{0}&quot;..
        /// </summary>
        public static string The_expression_on_the_right_side_must_be_constant__0__ {
            get {
                return ResourceManager.GetString("The_expression_on_the_right_side_must_be_constant__0__", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The function %F is not defined for %V = {0}..
        /// </summary>
        public static string The_function_f_is_not_defined_for_v_equals__0__ {
            get {
                return ResourceManager.GetString("The_function_f_is_not_defined_for_v_equals__0__", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The limits of plot area are identical..
        /// </summary>
        public static string The_limits_of_plot_area_are_identical {
            get {
                return ResourceManager.GetString("The_limits_of_plot_area_are_identical", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The result is not a real number: &quot;{0}&quot;..
        /// </summary>
        public static string The_result_is_not_a_real_number__0__ {
            get {
                return ResourceManager.GetString("The_result_is_not_a_real_number__0__", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &quot;There is no matching &quot;#def&quot;..
        /// </summary>
        public static string There_is_no_matching_def {
            get {
                return ResourceManager.GetString("There_is_no_matching_def", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Undefined input field..
        /// </summary>
        public static string Undefined_input_field {
            get {
                return ResourceManager.GetString("Undefined_input_field", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Undefined variable or units: &quot;{0}&quot;..
        /// </summary>
        public static string Undefined_variable_or_units__0__ {
            get {
                return ResourceManager.GetString("Undefined_variable_or_units__0__", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unexpected delimiter &apos;;&apos;..
        /// </summary>
        public static string Unexpected_delimiter__ {
            get {
                return ResourceManager.GetString("Unexpected_delimiter_;", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unexpected error: {0} Please check the expression consistency..
        /// </summary>
        public static string Unexpected_error_0_Please_check_the_expression_consistency {
            get {
                return ResourceManager.GetString("Unexpected_error_0_Please_check_the_expression_consistency", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unit &apos;{0}&apos; does not exist..
        /// </summary>
        public static string Unit__0__does_not_exist {
            get {
                return ResourceManager.GetString("Unit__0__does_not_exist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Units cannon be raised to complex power..
        /// </summary>
        public static string Units_cannon_be_raised_to_complex_power {
            get {
                return ResourceManager.GetString("Units_cannon_be_raised_to_complex_power", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Variable &apos;{0}&apos; does not exist..
        /// </summary>
        public static string Variable__0__does_not_exist {
            get {
                return ResourceManager.GetString("Variable__0__does_not_exist", resourceCulture);
            }
        }
    }
}
